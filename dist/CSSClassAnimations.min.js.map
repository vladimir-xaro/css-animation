{"version":3,"sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/./node_modules/@xaro/event-emitter/src/index.ts","webpack://[name]/./node_modules/@xaro/event-emitter/src/EventEmitter.ts","webpack://[name]/./node_modules/@xaro/micro-dom/src/helpers.ts","webpack://[name]/./node_modules/@xaro/micro-dom/src/MicroDOM.ts","webpack://[name]/./node_modules/@xaro/micro-dom/src/index.ts","webpack://[name]/./node_modules/@xaro/micro-dom/src/entry.ts","webpack://[name]/./src/variables.ts","webpack://[name]/./src/index.ts","webpack://[name]/./src/CSSClassAnimations.ts","webpack://[name]/webpack/bootstrap","webpack://[name]/webpack/startup","webpack://[name]/webpack/runtime/define property getters","webpack://[name]/webpack/runtime/hasOwnProperty shorthand"],"names":["root","factory","exports","module","define","amd","this","on","key","events","subscribe","cb","has","removes","Array","isArray","_cb","push","removeListener","unsubscribe","keys","idx","indexOf","splice","once","remove","listenerCount","hasOwnProperty","length","emit","event","args","validateEmit","seriesEmit","params","i","getEls","target","arr","els","el","nodes","querySelectorAll","Element","recursiveAppend","content","entity","append","get","newInstance","MicroDOM","document","create","entities","createElement","Object","tagName","empty","innerHTML","text","textContent","addClass","classList","add","classes","removeClass","toggleClass","classname","toggle","hasClass","reqtForAll","number","contains","addEventListener","type","listener","options","removeEventListener","css","obj","style","attr","setAttribute","nextTick","cbs","current","shift","setTimeout","eventsListeners","animationstart","animationcancel","animationend","animationiteration","transitionstart","transitioncancel","transitionend","transitionrun","config","emitter","allow","filter","value","disallow","forEach","bind","__mutationStartListener","__mutationCancelListener","__mutationEndListener","__mutationIterationListener","__mutationRunListener","addEvent","domEventKey","includes","removeEvent","eventKey","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","d","definition","o","defineProperty","enumerable","prop","prototype","call"],"mappings":"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","file":"CSSClassAnimations.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"CSSClassAnimations\"] = factory();\n\telse\n\t\troot[\"CSSClassAnimations\"] = factory();\n})(this, function() {\nreturn ","import EventEmitter from \"./EventEmitter\";\n\nexport default EventEmitter;\n\nexport {\n  I_EventEmitter,\n  I_EventEmitterEvents,\n  I_EventEmitterConstructorConfig\n} from \"./types\";","import { I_EventEmitter, I_EventEmitterConstructorConfig, I_EventEmitterEvents } from './types';\n\nexport default class EventEmitter implements I_EventEmitter {\n  /**\n   * Event list\n   */\n  events: I_EventEmitterEvents = {};\n\n\n  /**\n   * Create Emitter\n   */\n  constructor(on: I_EventEmitterConstructorConfig = {}) {\n    for (let key in on) {\n      if (on[key]) {\n        this.subscribe(key, on[key] as Function | Function[]);\n      }\n    }\n  }\n\n\n  /**\n   * Creates a key for the event and subscribes the passed callback to it.\n   */\n  subscribe(key: string, cb: Function | Function[]): Function[] {\n    if (!this.has(key)) {\n      this.events[key] = [];\n    }\n\n    let removes: Function[] = [];\n\n    if (Array.isArray(cb)) {\n      for (const _cb of cb) {\n        removes.push(...this.subscribe(key, _cb));\n      }\n    } else {\n      this.events[key].push(cb);\n      removes.push(() => this.removeListener(key, cb));\n    }\n\n    return removes;\n  }\n\n\n  /**\n   * Unsubscribes all callback functions from the event and removes the event\n   * key.\n   */\n  unsubscribe(...keys: string[]): void {\n    for (const key of keys) {\n      if (this.events[key]) {\n        delete this.events[key];\n      }\n    }\n  }\n\n\n  /**\n   * Removes a specific event key callback function.\n   */\n  removeListener(key: string, cb: Function): void {\n    // if (typeof this.events[key] === 'object') {\n    if (Array.isArray(this.events[key])) {\n      const idx = this.events[key].indexOf(cb);\n\n      if (idx > -1) {\n        this.events[key].splice(idx, 1);\n      }\n    }\n  }\n\n\n  /**\n   * Calls the callback function only once, and then removes it.\n   */\n  once(key: string, cb: Function | Function[]): void {\n    const remove = this.subscribe(key, () => {\n      remove[0]();\n      if (Array.isArray(cb)) {\n        for (const _cb of cb) {\n          _cb();\n        }\n      } else {\n        cb();\n      }\n    })\n  }\n\n\n  /**\n   * Checks for an event by key.\n   * (Doesn't check for callback functions)\n   */\n  has(key: string): boolean {\n    return !!this.events[key];\n  }\n\n\n  /**\n   * Returns the number of callback functions for the event key or \"false\" if\n   * there is no key\n   */\n  listenerCount(key: string): number | false {\n    if (! this.events.hasOwnProperty(key)) {\n      return false\n    }\n\n    return this.events[key].length;\n  }\n\n\n  /**\n   * Calls all callback functions on events using the event key.\n   */\n  emit(key: string, ...args: any): void {\n    const event: Function[] = this.events[key];\n\n    if (event) {\n      for (let cb of event) {\n        cb(...args);\n      }\n    }\n  }\n\n\n  /**\n   * Just like \"emit\" calls all callback functions. However, the callback must\n   * return a boolean value, which determines whether or not the next callback\n   * will execute.\n   * As a result, it returns the result of the last executed callback function.\n   */\n  validateEmit(key: string, ...args: any): boolean {\n    const event: Function[] = this.events[key];\n\n    if (! event) {\n      return false;\n    }\n\n    for(const cb of event) {\n      if (! cb(...args)) {\n        return false;\n      }\n    }\n    \n    return true;\n  }\n\n\n  /**\n   * Just like \"emit\" calls all callbacks, but unlike \"emit\" it passes the\n   * result of the previous callback to the next one as an argument.\n   * As aresult, it will return the result of the last callback.\n   */\n  seriesEmit(key: string, ...args: any): any {\n    const event: Function[] = this.events[key];\n\n    if (! event) {\n      return;\n    }\n\n    let params: any;\n\n    for (let i = 0; i < event.length; i++) {\n      if (i === 0) {\n        params = event[i](...args);\n      } else {\n        params = event[i](params);\n      }\n    }\n\n    return params;\n  }\n}","import { I_MicroDOM } from \"./types\";\n\nexport function getEls<T extends Element = Element>(target: Element | Document, ...els: Array<string | Element>): T[] {\n  const arr: T[] = [];\n\n  for (const el of els) {\n    if (typeof el === 'string') {\n      const nodes: NodeListOf<T> = target.querySelectorAll(el);\n      arr.push(...nodes);\n    } else if (el instanceof Element) {\n      arr.push(el as T);\n    }\n  }\n\n  return arr;\n}\n\nexport function recursiveAppend<T extends Element = Element>(el: Element, ...content: Array<string | Element> | I_MicroDOM<T>) {\n  for (const entity of content) {\n    if (Array.isArray(entity)) {\n      recursiveAppend(el, ...entity);\n    } else {\n      el.append(entity);\n    }\n  }\n}","import { getEls, recursiveAppend } from \"./helpers\";\nimport { I_MicroDOM } from \"./types\";\n\nexport default class MicroDOM<T extends Element = Element> extends Array<T> implements I_MicroDOM<T> {\n  constructor(...args) {\n    super(...args);\n  }\n\n  get<U extends Element = Element>(...args: Array<string | Element>): I_MicroDOM<U> {\n    let newInstance: I_MicroDOM<U> = new MicroDOM<U>();\n\n    if (this.length) {\n      for (const el of this) {\n        newInstance.push(...getEls<U>(el, ...args));\n      }\n    } else {\n      newInstance.push(...getEls<U>(document, ...args));\n    }\n\n    return newInstance;\n  }\n\n  create<U extends Element = Element>(...entities: Array<\n    string |\n    {\n      tagName?: string,\n      content?: string | Element | Array<string | Element> | I_MicroDOM<T>\n    }\n  >): I_MicroDOM<U> {\n    let newInstance: I_MicroDOM<U> = new MicroDOM<U>();\n\n    for (const entity of entities) {\n      if (typeof entity === 'string') {\n        newInstance.push(document.createElement(entity) as unknown as U);\n      } else if (entity instanceof Object) {\n        const el = document.createElement(entity.tagName || 'div') as unknown as U;\n        if (entity.content) {\n          if (Array.isArray(entity.content)) {\n            recursiveAppend<T>(el, ...entity.content)\n          } else {\n            recursiveAppend<T>(el, entity.content)\n          }\n        }\n        newInstance.push(el)\n      }\n    }\n\n    return newInstance;\n  }\n\n  empty(): I_MicroDOM<T> {\n    for (const el of this) {\n      (el as Element).innerHTML = '';\n    }\n\n    return this;\n  }\n\n  text(text?: string): I_MicroDOM<T> {\n    for (const el of this) {\n      el.textContent = text || '';\n    }\n\n    return this;\n  }\n\n  append(...append: Array<string | Element> | I_MicroDOM<T>): I_MicroDOM<T> {\n    for (const el of this) {\n      recursiveAppend(el, ...append);\n    }\n\n    return this;\n  }\n\n  addClass(...classes: string[]): I_MicroDOM<T> {\n    for (const el of this) {\n      el.classList.add(...classes);\n    }\n\n    return this;\n  }\n\n  removeClass(...classes: string[]): I_MicroDOM<T> {\n    for (const el of this) {\n      el.classList.remove(...classes);\n    }\n\n    return this;\n  }\n\n  toggleClass(classname: string): I_MicroDOM<T> {\n    for (const el of this) {\n      el.classList.toggle(classname);\n    }\n\n    return this;\n  }\n\n  hasClass(classname: string, reqtForAll: boolean = false): boolean {\n    if (reqtForAll) { // The presence of a class for each element of the set\n      let number = 0;\n      for (const el of this) {\n        if ((el as T).classList.contains(classname)) {\n          number++;\n        }\n      }\n      return number === this.length;\n    } else {          // the presence of a class for at least one element of the set\n      for (const el of this) {\n        if ((el as T).classList.contains(classname)) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }\n\n  addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): I_MicroDOM<T> {\n    for (const el of this) {\n      (el as T).addEventListener(type, listener, options);\n    }\n\n    return this;\n  }\n\n  removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): I_MicroDOM<T> {\n    for (const el of this) {\n      (el as T).removeEventListener(type, listener, options);\n    }\n\n    return this;\n  }\n\n  css(obj: object): I_MicroDOM<T> {\n    for (const el of this) {\n      for (const key in obj) {\n        (el as unknown as HTMLElement).style[key] = obj[key];\n      }\n    }\n\n    return this;\n  }\n\n  attr(obj: object): I_MicroDOM<T> {\n    for (const el of this) {\n      for (const key in obj) {\n        el.setAttribute(key, obj[key]);\n      }\n    }\n\n    return this;\n  }\n\n  nextTick(...cbs: Function[]): I_MicroDOM<T> {\n    const arr = cbs;\n    const current = cbs.shift();\n    \n    current && setTimeout(() => {\n      current();\n\n      if (arr.length) {\n        this.nextTick(...arr);\n      }\n    }, 0);\n\n    return this;\n  }\n}","import _ from \"./entry\";\n\nexport default _;\n\n// ===\n\nimport MicroDOM from \"./MicroDOM\";\nimport { I_MicroDOM } from \"./types\";\n\nexport {\n  MicroDOM,\n\n  I_MicroDOM\n};","import { getEls } from \"./helpers\";\nimport MicroDOM from \"./MicroDOM\";\nimport { I_MicroDOM } from \"./types\";\n\nexport default function _<T extends Element = Element>(...args: Array<string | Element>): I_MicroDOM<T> {\n  if (args instanceof MicroDOM) {\n    return args;\n  }\n\n  return new MicroDOM<T>(...getEls<T>(document, ...args));\n}","import { T_DOMEventsKeys } from \"./types\";\n\nexport const eventsListeners: { [key: string]: string } = {\n  animationstart:     '__mutationStartListener',\n  animationcancel:    '__mutationCancelListener',\n  animationend:       '__mutationEndListener',\n  animationiteration: '__mutationIterationListener',\n  transitionstart:    '__mutationStartListener',\n  transitioncancel:   '__mutationCancelListener',\n  transitionend:      '__mutationEndListener',\n  transitionrun:      '__mutationRunListener'\n};\n\nexport const events: T_DOMEventsKeys[] = Object.keys(eventsListeners) as T_DOMEventsKeys[];","import CSSClassAnimations from \"./CSSClassAnimations\";\n\nexport default CSSClassAnimations;\n\nexport {\n  I_CSSClassAnimations,\n  I_CSSClassAnimationsConstructorConfig,\n  T_DOMEventsKeys,\n  T_EmitterEventsKeys\n} from \"./types\";","import { I_CSSClassAnimations, I_CSSClassAnimationsConstructorConfig, T_DOMEventsKeys, T_EmitterEventsKeys } from \"./types\";\nimport EventEmitter, { I_EventEmitter } from \"@xaro/event-emitter\";\nimport _, { I_MicroDOM } from \"@xaro/micro-dom\";\nimport { events, eventsListeners } from \"./variables\";\n\nexport default class CSSClassAnimations implements I_CSSClassAnimations {\n  els:      I_MicroDOM;\n  emitter:  I_EventEmitter;\n  allow:    T_DOMEventsKeys[];\n\n  constructor(config: I_CSSClassAnimationsConstructorConfig) {\n    this.emitter = new EventEmitter(config.on);\n\n    this.els = Array.isArray(config.el) ? _(...config.el) : _(config.el);\n\n    if (config.allow) {\n      this.allow = (Array.isArray(config.allow) ? config.allow : [ config.allow ]).filter(value => events.includes(value));\n    } else if (config.disallow) {\n      this.allow = (Array.isArray(config.disallow) ? config.disallow : [ config.disallow ]).filter(value => events.includes(value));\n    } else {\n      this.allow = events;\n    }\n\n    Object.keys(eventsListeners).forEach(key => this[eventsListeners[key]] = this[eventsListeners[key]].bind(this));\n\n    this.els.forEach(el => this.allow.forEach(event => el.addEventListener(event, this[eventsListeners[event]])));\n  }\n\n  protected __mutationStartListener(event: AnimationEvent | TransitionEvent) {\n    this.emitter.emit('start', event);\n  }\n\n  protected __mutationCancelListener(event: AnimationEvent | TransitionEvent) {\n    this.emitter.emit('cancel', event);\n  }\n\n  protected __mutationEndListener(event: AnimationEvent | TransitionEvent) {\n    this.emitter.emit('end', event);\n  }\n\n  protected __mutationIterationListener(event: AnimationEvent | TransitionEvent) {\n    this.emitter.emit('iteration', event);\n  }\n\n  protected __mutationRunListener(event: AnimationEvent | TransitionEvent) {\n    this.emitter.emit('run', event);\n  }\n\n  addEvent(domEventKey: T_DOMEventsKeys) {\n    if (!events.includes(domEventKey)) {\n      return;\n    }\n    \n    this.allow.push(domEventKey);\n\n    this.els.forEach(el => el.addEventListener(domEventKey, this[eventsListeners[domEventKey]]));\n  }\n\n  removeEvent(domEventKey: T_DOMEventsKeys) {\n    if (!events.includes(domEventKey) || !this.allow.includes(domEventKey)) {\n      return;\n    }\n\n    this.allow.splice(this.allow.indexOf(domEventKey));\n\n    this.els.forEach(el => el.removeEventListener(domEventKey, this[eventsListeners[domEventKey]]));\n  }\n\n  on(eventKey: T_EmitterEventsKeys, cb: Function | Function[]) {\n    this.emitter.subscribe(eventKey, cb);\n  }\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(864);\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }"],"sourceRoot":""}