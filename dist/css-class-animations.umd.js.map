{"version":3,"file":"css-class-animations.umd.js","sources":["../node_modules/@xaro/event-emitter/dist/event-emitter.es.js","../node_modules/@xaro/micro-dom/dist/micro-dom.es.js","../src/variables.ts","../src/CSSClassAnimations.ts"],"sourcesContent":["export default class {\n    /**\n     * Event list\n     */\n    events={};\n    /**\n     * Create Emitter\n     */\n    constructor(e = {}) {\n        for (let s in e) e[s] && this.subscribe(s, e[s]);\n    }\n    /**\n     * Creates a key for the event and subscribes the passed callback to it.\n     */    subscribe(e, s) {\n        this.has(e) || (this.events[e] = []);\n        let t = [];\n        if (Array.isArray(s)) for (const r of s) t.push(...this.subscribe(e, r)); else this.events[e].push(s), \n        t.push((() => this.removeListener(e, s)));\n        return t;\n    }\n    /**\n     * Unsubscribes all callback functions from the event and removes the event\n     * key.\n     */    unsubscribe(...e) {\n        for (const s of e) this.events[s] && delete this.events[s];\n    }\n    /**\n     * Removes a specific event key callback function.\n     */    removeListener(e, s) {\n        // if (typeof this.events[key] === 'object') {\n        if (Array.isArray(this.events[e])) {\n            const t = this.events[e].indexOf(s);\n            t > -1 && this.events[e].splice(t, 1);\n        }\n    }\n    /**\n     * Calls the callback function only once, and then removes it.\n     */    once(e, s) {\n        const t = this.subscribe(e, (() => {\n            t[0](), Array.isArray(s) ? s.forEach((e => e())) : s();\n        }));\n    }\n    /**\n     * Checks for an event by key.\n     * (Doesn't check for callback functions)\n     */    has(e) {\n        return !!this.events[e];\n    }\n    /**\n     * Returns the number of callback functions for the event key or \"false\" if\n     * there is no key\n     */    listenerCount(e) {\n        return !!this.events.hasOwnProperty(e) && this.events[e].length;\n    }\n    /**\n     * Calls all callback functions on events using the event key.\n     */    emit(e, ...s) {\n        const t = this.events[e];\n        if (t) for (let e of t) e(...s);\n    }\n    /**\n     * Just like \"emit\" calls all callback functions. However, the callback must\n     * return a boolean value, which determines whether or not the next callback\n     * will execute.\n     * As a result, it returns the result of the last executed callback function.\n     */    validateEmit(e, ...s) {\n        const t = this.events[e];\n        if (!t) return !1;\n        for (const e of t) if (!e(...s)) return !1;\n        return !0;\n    }\n    /**\n     * Just like \"emit\" calls all callbacks, but unlike \"emit\" it passes the\n     * result of the previous callback to the next one as an argument.\n     * As aresult, it will return the result of the last callback.\n     */    seriesEmit(e, ...s) {\n        const t = this.events[e];\n        if (!t) return;\n        let r;\n        for (let e = 0; e < t.length; e++) r = 0 === e ? t[e](...s) : t[e](r);\n        return r;\n    }\n}\n//# sourceMappingURL=event-emitter.es.js.map\n","function t(t, ...e) {\n    const s = [];\n    for (const r of e) if (\"string\" == typeof r) {\n        const e = t.querySelectorAll(r);\n        s.push(...e);\n    } else r instanceof Element && s.push(r);\n    return s;\n}\n\nfunction e(t, ...s) {\n    for (const r of s) Array.isArray(r) ? e(t, ...r) : t.append(r);\n}\n\nfunction s(...t) {\n    const e = t, r = t.shift();\n    return r && setTimeout((() => {\n        r(), e.length && s(...e);\n    }), 0), this;\n}\n\nclass r extends Array {\n    constructor(...t) {\n        super(...t);\n    }\n    /**\n     * Returns a new instance containing the elements with the passed selectors and elements (or from the document if the current instance is empty)\n     */    get(...e) {\n        let s = new r;\n        if (this.length) for (const r of this) s.push(...t(r, ...e)); else s.push(...t(document, ...e));\n        return s;\n    }\n    /**\n     * Returns a new instance with new created elements according to the passed parameters\n     */    create(...t) {\n        let s = new r;\n        for (const r of t) if (\"string\" == typeof r) s.push(document.createElement(r)); else if (r instanceof Object) {\n            const t = document.createElement(r.tagName || \"div\");\n            r.content && (Array.isArray(r.content) ? e(t, ...r.content) : e(t, r.content)), \n            s.push(t);\n        }\n        return s;\n    }\n    /**\n     * Clears the contents of each element in the set and returns the instance itself\n     */    empty() {\n        return this.forEach((t => t.innerHTML = \"\")), this;\n    }\n    /**\n     * Sets the textContent property for each collection item and returns an instance\n     */    text(t) {\n        return this.forEach((e => e.textContent = t || \"\")), this;\n    }\n    /**\n     * Inserts a set of Node objects or DOMString objects after the last child of each array element\n     */    append(...t) {\n        return this.forEach((s => e(s, ...t))), this;\n    }\n    /**\n     * Adds a class or classes to all array elements\n     */    addClass(...t) {\n        return this.forEach((e => e.classList.add(...t))), this;\n    }\n    /**\n     * Removes a class or classes from all array elements\n     */    removeClass(...t) {\n        return this.forEach((e => e.classList.remove(...t))), this;\n    }\n    /**\n     * Adds or removes a class for each element of the array, depending on its presence\n     */    toggleClass(t) {\n        return this.forEach((e => e.classList.toggle(t))), this;\n    }\n    /**\n     * Determine if any of the agreed members are assigned to this class. Or, if you pass \"true\" as the second argument, then each element (default: reqtForAll = false)\n     */    hasClass(t, e = !1) {\n        if (e) {\n            // The presence of a class for each element of the set\n            let e = 0;\n            return this.forEach((s => {\n                s.classList.contains(t) && e++;\n            })), e === this.length;\n        }\n        // the presence of a class for at least one element of the set\n        for (const e of this) if (e.classList.contains(t)) return !0;\n        return !1;\n    }\n    /**\n     * Calls the \"addEventListener\" method for each set item\n     */    addEventListener(t, e, s) {\n        return this.forEach((r => r.addEventListener(t, e, s))), this;\n    }\n    /**\n     * Calls the \"removeEventListener\" method for each set item\n     */    removeEventListener(t, e, s) {\n        return this.forEach((r => r.removeEventListener(t, e, s))), this;\n    }\n    /**\n     * Calls dispatchEvent with an event of the specified type for each item in the set\n     */    fireEvent(t) {\n        return this.forEach((e => e.dispatchEvent(new Event(t)))), this;\n    }\n    /**\n     * Sets the style attribute property passed in the object by key\n     */    css(t) {\n        return this.forEach((e => Object.keys(t).forEach((s => e.style[s] = t[s])))), this;\n    }\n    /**\n     * Sets the attribute property passed in the object by key\n     */    attr(t) {\n        return this.forEach((e => Object.keys(t).forEach((s => e.setAttribute(s, t[s]))))), \n        this;\n    }\n    /**\n     * Recursively calls each passed function in a new setTimeout(() => {}, 0)\n     */    nextTick(...t) {\n        return s(...t), this;\n    }\n}\n\nfunction n(...e) {\n    return e instanceof r ? e : new r(...t(document, ...e));\n}\n\nexport default n;\n\nexport { r as MicroDOM, s as nextTick };\n//# sourceMappingURL=micro-dom.es.js.map\n",null,null],"names":["on","key","this","subscribe","[object Object]","cb","has","events","removes","Array","isArray","_cb","push","removeListener","keys","idx","indexOf","splice","remove","forEach","hasOwnProperty","length","event","args","params","i","getEls","target","arr","els","el","nodes","querySelectorAll","Element","recursiveAppend","content","entity","append","nextTick","cbs","current","shift","setTimeout","eventsListeners","animationstart","animationcancel","animationend","animationiteration","transitionstart","transitioncancel","transitionend","transitionrun","Object","config","emitter","EventEmitter","_","allow","filter","value","includes","disallow","bind","addEventListener","emit","domEventKey","removeEventListener","eventKey"],"mappings":"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"}