{"version":3,"sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/./node_modules/@xaro/event-emitter/src/index.ts","webpack://[name]/./node_modules/@xaro/event-emitter/src/EventEmitter.ts","webpack://[name]/./src/variables.ts","webpack://[name]/./src/helpers.ts","webpack://[name]/./src/index.ts","webpack://[name]/./src/CSSClassAnimations.ts","webpack://[name]/webpack/bootstrap","webpack://[name]/webpack/startup","webpack://[name]/webpack/runtime/define property getters","webpack://[name]/webpack/runtime/hasOwnProperty shorthand"],"names":["root","factory","exports","module","define","amd","this","on","key","events","subscribe","cb","has","removes","Array","isArray","_cb","push","removeListener","unsubscribe","keys","idx","indexOf","splice","once","remove","listenerCount","hasOwnProperty","length","emit","event","args","validateEmit","seriesEmit","params","i","eventsListeners","animationstart","animationcancel","animationend","animationiteration","transitionstart","transitioncancel","transitionend","transitionrun","Object","addTo","origin","value","document","querySelectorAll","Element","config","els","emitter","el","val","allow","filter","disallow","includes","bind","addEventListener","__mutationStartListener","__mutationCancelListener","__mutationEndListener","__mutationIterationListener","__mutationRunListener","addEvent","domEventKey","removeEvent","removeEventListener","addClass","classList","add","classes","removeClass","css","obj","style","eventKey","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","d","definition","o","defineProperty","enumerable","get","prop","prototype","call"],"mappings":"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","file":"CSSClassAnimations.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"CSSClassAnimations\"] = factory();\n\telse\n\t\troot[\"CSSClassAnimations\"] = factory();\n})(this, function() {\nreturn ","import EventEmitter from \"./EventEmitter\";\n\nexport default EventEmitter;\n\nexport {\n  I_EventEmitter,\n  I_EventEmitterEvents,\n  I_EventEmitterConstructorConfig,\n  T_Func\n} from \"./types\";","import { I_EventEmitter, I_EventEmitterConstructorConfig, I_EventEmitterEvents, T_Func } from './types';\n\nexport default class EventEmitter implements I_EventEmitter {\n  /**\n   * Event list\n   */\n  events: I_EventEmitterEvents = {};\n\n\n  /**\n   * Create Emitter\n   */\n  constructor(on: I_EventEmitterConstructorConfig = {}) {\n    for (let key in on) {\n      if (on[key]) {\n        this.subscribe(key, on[key] as T_Func | T_Func[]);\n      }\n    }\n  }\n\n\n  /**\n   * Creates a key for the event and subscribes the passed callback to it.\n   */\n  subscribe(key: string, cb: T_Func | T_Func[]): T_Func[] {\n    if (!this.has(key)) {\n      this.events[key] = [];\n    }\n\n    let removes: T_Func[] = [];\n\n    if (Array.isArray(cb)) {\n      for (const _cb of cb) {\n        removes.push(...this.subscribe(key, _cb));\n      }\n    } else {\n      this.events[key].push(cb);\n      removes.push(() => this.removeListener(key, cb));\n    }\n\n    return removes;\n  }\n\n\n  /**\n   * Unsubscribes all callback functions from the event and removes the event\n   * key.\n   */\n  unsubscribe(...keys: string[]): void {\n    for (const key of keys) {\n      if (this.events[key]) {\n        delete this.events[key];\n      }\n    }\n  }\n\n\n  /**\n   * Removes a specific event key callback function.\n   */\n  removeListener(key: string, cb: T_Func): void {\n    // if (typeof this.events[key] === 'object') {\n    if (Array.isArray(this.events[key])) {\n      const idx = this.events[key].indexOf(cb);\n\n      if (idx > -1) {\n        this.events[key].splice(idx, 1);\n      }\n    }\n  }\n\n\n  /**\n   * Calls the callback function only once, and then removes it.\n   */\n  once(key: string, cb: T_Func | T_Func[]): void {\n    const remove = this.subscribe(key, () => {\n      remove[0]();\n      if (Array.isArray(cb)) {\n        for (const _cb of cb) {\n          _cb();\n        }\n      } else {\n        cb();\n      }\n    })\n  }\n\n\n  /**\n   * Checks for an event by key.\n   * (Doesn't check for callback functions)\n   */\n  has(key: string): boolean {\n    return !!this.events[key];\n  }\n\n\n  /**\n   * Returns the number of callback functions for the event key or \"false\" if\n   * there is no key\n   */\n  listenerCount(key: string): number | false {\n    if (! this.events.hasOwnProperty(key)) {\n      return false\n    }\n\n    return this.events[key].length;\n  }\n\n\n  /**\n   * Calls all callback functions on events using the event key.\n   */\n  emit(key: string, ...args: any): void {\n    const event: T_Func[] = this.events[key];\n\n    if (event) {\n      for (let cb of event) {\n        cb(...args);\n      }\n    }\n  }\n\n\n  /**\n   * Just like \"emit\" calls all callback functions. However, the callback must\n   * return a boolean value, which determines whether or not the next callback\n   * will execute.\n   * As a result, it returns the result of the last executed callback function.\n   */\n  validateEmit(key: string, ...args: any): boolean {\n    const event: T_Func[] = this.events[key];\n\n    if (! event) {\n      return false;\n    }\n\n    for(const cb of event) {\n      if (! cb(...args)) {\n        return false;\n      }\n    }\n    \n    return true;\n  }\n\n\n  /**\n   * Just like \"emit\" calls all callbacks, but unlike \"emit\" it passes the\n   * result of the previous callback to the next one as an argument.\n   * As aresult, it will return the result of the last callback.\n   */\n  seriesEmit(key: string, ...args: any): any {\n    const event: T_Func[] = this.events[key];\n\n    if (! event) {\n      return;\n    }\n\n    let params: any;\n\n    for (let i = 0; i < event.length; i++) {\n      if (i === 0) {\n        params = event[i](...args);\n      } else {\n        params = event[i](params);\n      }\n    }\n\n    return params;\n  }\n}","export const eventsListeners = {\n  animationstart:     '__mutationStartListener',\n  animationcancel:    '__mutationCancelListener',\n  animationend:       '__mutationEndListener',\n  animationiteration: '__mutationIterationListener',\n  transitionstart:    '__mutationStartListener',\n  transitioncancel:   '__mutationCancelListener',\n  transitionend:      '__mutationEndListener',\n  transitionrun:      '__mutationRunListener'\n};\n\nexport const events = Object.keys(eventsListeners);","export function addTo(origin: Element[], value: Element | Element[] | string | string[]) {\n  if (typeof value === 'string') {\n    origin.push(...document.querySelectorAll(value));\n  } else if (value instanceof Element) {\n    origin.push(value);\n  }\n}","import CSSClassAnimations from \"./CSSClassAnimations\";\n\nexport default CSSClassAnimations;\n\nexport {\n  I_CSSClassAnimations,\n  I_CSSClassAnimationsConstructorConfig,\n  T_DOMEventsKeys,\n  T_EmitterEventsKeys\n} from \"./types\";","import { I_CSSClassAnimations as I_CSSClassAnimations, I_CSSClassAnimationsConstructorConfig, T_DOMEventsKeys, T_EmitterEventsKeys } from \"./types\";\nimport EventEmitter, { I_EventEmitter, T_Func } from \"@xaro/event-emitter\";\nimport { events, eventsListeners } from \"./variables\";\nimport { addTo } from \"./helpers\";\n\nexport default class CSSClassAnimations implements I_CSSClassAnimations {\n  els:      Element[] = [];\n  emitter:  I_EventEmitter;\n  allow:    string[];\n\n  constructor(config: I_CSSClassAnimationsConstructorConfig) {\n    this.emitter = new EventEmitter(config.on);\n    \n    if (Array.isArray(config.el)) {\n      for (const val of config.el) {\n        addTo(this.els, val);\n      }\n    } else {\n      addTo(this.els, config.el);\n    }\n\n    if (config.allow) {\n      this.allow = config.allow.filter(value => events.includes(value));\n    } else if (config.disallow) {\n      this.allow = events.filter(value => !config.disallow!.includes(value as T_DOMEventsKeys));\n    } else {\n      this.allow = events;\n    }\n\n    for (const key in eventsListeners) {\n      this[eventsListeners[key]] = this[eventsListeners[key]].bind(this);\n    }\n\n    for (const el of this.els) {\n      for (const event of this.allow) {\n        el.addEventListener(event, this[eventsListeners[event]]);\n      }\n    }\n  }\n\n  protected __mutationStartListener(event: AnimationEvent | TransitionEvent) {\n    this.emitter.emit('start', this, event);\n  }\n\n  protected __mutationCancelListener(event: AnimationEvent | TransitionEvent) {\n    this.emitter.emit('cancel', this, event);\n  }\n\n  protected __mutationEndListener(event: AnimationEvent | TransitionEvent) {\n    this.emitter.emit('end', this, event);\n  }\n\n  protected __mutationIterationListener(event: AnimationEvent | TransitionEvent) {\n    this.emitter.emit('iteration', this, event);\n  }\n\n  protected __mutationRunListener(event: AnimationEvent | TransitionEvent) {\n    this.emitter.emit('run', this, event);\n  }\n\n  addEvent(domEventKey: T_DOMEventsKeys) {\n    if (! this.allow.includes(domEventKey)) {\n      return;\n    }\n\n    for (const el of this.els) {\n      el.addEventListener(domEventKey, this[eventsListeners[domEventKey]]);\n    }\n  }\n\n  removeEvent(domEventKey: T_DOMEventsKeys) {\n    if (! this.allow.includes(domEventKey)) {\n      return;\n    }\n\n    for (const el of this.els) {\n      el.removeEventListener(domEventKey, this[eventsListeners[domEventKey]]);\n    }\n  }\n\n  addClass(...classes: string[]): Element[] {\n    for (const el of this.els) {\n      el.classList.add(...classes);\n    }\n\n    return this.els;\n  }\n\n  removeClass(...classes: string[]): Element[] {\n    for (const el of this.els) {\n      el.classList.remove(...classes);\n    }\n\n    return this.els;\n  }\n\n  css(obj: object): Element[] {\n    for (const el of this.els) {\n      for (const key in obj) {\n        (el as HTMLElement).style[key] = obj[key];\n      }\n    }\n    return this.els;\n  }\n\n  on(eventKey: T_EmitterEventsKeys, cb: T_Func | T_Func[]) {\n    this.emitter.subscribe(eventKey, cb);\n  }\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(994);\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }"],"sourceRoot":""}